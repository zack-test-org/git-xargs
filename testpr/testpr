#!/bin/bash
# Our repos do not run external PRs automatically for security reasons
# i.e. leaking of environment variables from circle environment.
# This means often tests are run after merging the PR which is not an ideal
# situation. This script contains a series of steps to push the PR changes to
# another branch in the repo, kicking off CI tests.
#
# This script deletes the local branch and the remote once it's pushed, but
# after CI runs you still have to manually remove the branch on origin. This
# is a simple initial version and therefore we are not waiting on our CI to do
# that automatically here yet.


set -e


readonly DEFAULT_CI_PATH="https://circleci.com/gh"

function print_usage {
  echo
  echo "Usage: testpr [OPTIONS]"
  echo
  echo "This script pushes changes from an external PR to another branch to kick off CI tests. Use from a local clone of the repository."
  echo
  echo "Required Params:"
  echo
  echo -e "  --pr\t\tThe PR number"
  echo
  echo "Example:"
  echo
  echo "  testpr --pr 42"
}

function assert_not_empty {
  local readonly arg_name="$1"
  local readonly arg_value="$2"

  if [[ -z "$arg_value" ]]; then
    log_error "The value for '$arg_name' cannot be empty"
    print_usage
    exit 1
  fi
}

function test_pr {
  local readonly pr_number="$1"

  local readonly our_repo_path=$(git config --get remote.origin.url | sed "s/https:\/\/github.com\///")
  local readonly pr_details=$(curl --fail -H "Authorization: token $GITHUB_OAUTH_TOKEN" "https://api.github.com/repos/$our_repo_path/pulls/$pr_number")

  local readonly their_repo_path=$(echo "$pr_details" | tr '\r\n' ' ' | jq -r .head.repo.full_name)
  local readonly contributor=$(echo "$pr_details" | tr '\r\n' ' ' | jq -r .head.user.login)
  local readonly ref=$(echo "$pr_details" | tr '\r\n' ' ' | jq -r .head.ref)
  local readonly pr_number=$(echo "$pr_details" | tr '\r\n' ' ' | jq -r .number)
  local readonly new_branch="pull-request-$pr_number"

  git remote add -f "$contributor" "https://github.com/$their_repo_path"
  git checkout "$contributor/$ref"
  git checkout -b "$new_branch"
  git push --set-upstream origin "$new_branch" --force-with-lease
  git remote remove "$contributor"
  git checkout master
  git branch -D "$new_branch"
  echo
  echo "You should now be able to see their changes at:"
  echo "$DEFAULT_CI_PATH/$our_repo_path/tree/$new_branch"
}

function run {
  local pr_number=""

  while [[ $# > 0 ]]; do
    local key="$1"

    case "$key" in
      --pr)
        pr_number="$2"
        shift
        ;;
      --help)
        print_usage
        exit
        ;;
      *)
        log_error "Unrecognized argument: $key"
        print_usage
        exit 1
        ;;
    esac

    shift
  done

  assert_not_empty "--pr" "$pr_number"
  test_pr "$pr_number"
}

run "$@"
